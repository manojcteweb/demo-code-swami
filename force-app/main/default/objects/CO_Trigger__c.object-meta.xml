thon
class CreditCheckIntegration:
    def __init__(self, credit_tool):
        self.credit_tool = credit_tool

    def retrieve_credit_info(self, applicant_id):
        credit_score = self.credit_tool.get_credit_score(applicant_id)
        financial_history = self.credit_tool.get_financial_history(applicant_id)
        return credit_score, financial_history

    def calculate_loan_offer(self, credit_score, financial_history):
        if credit_score > 750:
            return 50000, 3.5
        elif credit_score > 650:
            return 30000, 5.0
        else:
            return 10000, 7.5

    def pre_qualify_applicant(self, applicant_id):
        credit_score, financial_history = self.retrieve_credit_info(applicant_id)
        loan_amount, interest_rate = self.calculate_loan_offer(credit_score, financial_history)
        self.store_applicant_data(applicant_id, credit_score, financial_history)
        return loan_amount, interest_rate

    def store_applicant_data(self, applicant_id, credit_score, financial_history):
        database[applicant_id] = {'credit_score': credit_score, 'financial_history': financial_history}

# Example usage
credit_tool = CreditCheckTool()  # Assume this is a predefined class
credit_system = CreditCheckIntegration(credit_tool)
loan_amount, interest_rate = credit_system.pre_qualify_applicant('applicant123')
print(f"Pre-qualified Loan Amount: ${loan_amount}, Interest Rate: {interest_rate}%")
